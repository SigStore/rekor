apiVersion: apps/v1
kind: Deployment
metadata:
  name: trillian-server
  labels:
    app: trillian-server
spec:
  replicas: 3
  selector:
    matchLabels:
      app: trillian-server
  template:
    metadata:
      labels:
        app: trillian-server
    spec:
      containers:
      - name: log-server
        image: gcr.io/trillian-opensource-ci/log_server
        ports:
        - containerPort: 8090
        - containerPort: 8091
        args: [
          "--storage_system=mysql",
          "--mysql_uri=test:zaphod@tcp(localhost:3306)/test",
          "--rpc_endpoint=0.0.0.0:8091",
          "--http_endpoint=0.0.0.0:8090",
          "--alsologtostderr",
        ]
      - name: cloud-sql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.17
        command:
          - "/cloud_sql_proxy"
          # TODO: move these to a configmap
          - "-instances=project-rekor:us-central1:rekor-dev=tcp:3306"
        securityContext:
          runAsNonRoot: true
---
apiVersion: v1
kind: Service
metadata:
  name: trillian-server
spec:
  selector:
    app: trillian-server
  ports:
    - protocol: TCP
      port: 8091
      targetPort: 8091
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trillian-signer
  labels:
    app: trillian-signer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: trillian-signer
  template:
    metadata:
      labels:
        app: trillian-signer
    spec:
      containers:
      - name: log-signer
        image: gcr.io/trillian-opensource-ci/log_signer
        args: [
          "--storage_system=mysql",
          # TODO: move these to a secret/configmap
          "--mysql_uri=test:zaphod@tcp(localhost:3306)/test",
          "--rpc_endpoint=0.0.0.0:8090",
          "--http_endpoint=0.0.0.0:8091",
          # TODO: use etcd and run multiple signers
          "--force_master",
          "--alsologtostderr",
        ]
      - name: cloud-sql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.17
        command:
          - "/cloud_sql_proxy"
          # TODO: move to a secret/configmap
          - "-instances=$(CLOUD_SQL_CONNECTION)"
        env:
        - name: CLOUD_SQL_CONNECTION
          valueFrom:
            configMapKeyRef:
              name: cloud-sql
              key: connection
        securityContext:
          runAsNonRoot: true
